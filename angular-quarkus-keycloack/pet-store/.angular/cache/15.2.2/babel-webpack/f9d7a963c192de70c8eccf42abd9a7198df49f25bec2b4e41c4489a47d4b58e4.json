{"ast":null,"code":"import _asyncToGenerator from \"/home/raphael/Desktop/Schule/5AHIF/Syp/KeyCloak-Presentation/angular-quarkus-keycloack/pet-store/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment as env } from '../environments/environment';\nexport function initializer(keycloak) {\n  return () => {\n    return new Promise( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (resolve, reject) {\n        try {\n          yield keycloak.init({\n            config: {\n              url: env.keycloak.issuer,\n              realm: env.keycloak.realm,\n              clientId: env.keycloak.clientId\n            },\n            loadUserProfileAtStartUp: true,\n            initOptions: {\n              onLoad: 'login-required'\n            },\n            bearerExcludedUrls: []\n          });\n          resolve(null);\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n}","map":{"version":3,"mappings":";AAEA,SAASA,WAAW,IAAIC,GAAG,QAAO,6BAA6B;AAE/D,OAAM,SAAUC,WAAW,CAACC,QAAyB;EACnD,OAAO,MAAmB;IACxB,OAAO,IAAIC,OAAO;MAAA,6BAAC,WAAOC,OAAO,EAAEC,MAAM,EAAI;QAC3C,IAAI;UACF,MAAMH,QAAQ,CAACI,IAAI,CAAC;YAClBC,MAAM,EAAE;cACNC,GAAG,EAAER,GAAG,CAACE,QAAQ,CAACO,MAAM;cACxBC,KAAK,EAAEV,GAAG,CAACE,QAAQ,CAACQ,KAAK;cACzBC,QAAQ,EAAEX,GAAG,CAACE,QAAQ,CAACS;aACxB;YACDC,wBAAwB,EAAE,IAAI;YAC9BC,WAAW,EAAE;cACXC,MAAM,EAAE;aACT;YACDC,kBAAkB,EAAE;WACrB,CAAC;UACFX,OAAO,CAAC,IAAI,CAAC;SACd,CAAC,OAAMY,KAAK,EAAE;UACbX,MAAM,CAACW,KAAK,CAAC;;MAEjB,CAAC;MAAA;QAAA;MAAA;IAAA,IAAC;EACJ,CAAC;AACH","names":["environment","env","initializer","keycloak","Promise","resolve","reject","init","config","url","issuer","realm","clientId","loadUserProfileAtStartUp","initOptions","onLoad","bearerExcludedUrls","error"],"sourceRoot":"","sources":["/home/raphael/Desktop/Schule/5AHIF/Syp/KeyCloak-Presentation/angular-quarkus-keycloack/pet-store/src/app/initializer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { KeycloakService } from 'keycloak-angular';\nimport { environment as env} from '../environments/environment';\n\nexport function initializer(keycloak: KeycloakService): () => Promise<any> {\n  return (): Promise<any> => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        await keycloak.init({\n          config: {\n            url: env.keycloak.issuer,\n            realm: env.keycloak.realm,\n            clientId: env.keycloak.clientId,\n          },\n          loadUserProfileAtStartUp: true,\n          initOptions: {\n            onLoad: 'login-required'\n          },\n          bearerExcludedUrls: []\n        });\n        resolve(null);\n      } catch(error) {\n        reject(error);\n      }\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}